@{
    ViewBag.Title = "Calculator";
}
<h2>@ViewBag.Title</h2>

@*<div class="jumbotron">
        <h1>ASP.NET</h1>
        <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
        <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
    </div>

    <div class="row">
        <div class="col-md-4">
            <h2>Getting started</h2>
            <p>
                ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
                enables a clean separation of concerns and gives you full control over markup
                for enjoyable, agile development.
            </p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Get more libraries</h2>
            <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Web Hosting</h2>
            <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
        </div>
    </div>*@

@using IlanShchoriWebApp.Models
@model GayaModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal overflow-hidden" style="width: 99%;">
        @*<h4>Dlp</h4>
            <hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <br />
        @*<div class="form-group">
                <div class="col-lg-11">
                    @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control readonly", @readonly = "readonly" } })
                </div>
                @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-1" })
            </div>*@

        <div class="container text-center">
            <div class="row align-items-start">
                <div class="col-12">
                    &nbsp;
                </div>
            </div>
            <div class="row justify-content-start form-group">
                <div class="col-lg-3">
                    @Html.EditorFor(model => model.Input01, new { @class = "form-control btn-lg btn-outline-secondary text-center" })
                    @Html.ValidationMessageFor(model => model.Input01, "", new { @class = "text-danger" })
                </div>
                @*@Html.LabelFor(model => model.Input01, htmlAttributes: new { @class = "control-label col-lg-1" })*@
                <div class="col-lg-3">
                    @*<div class="float-child">*@
                    @Html.DropDownListFor(model => model.Operation, new SelectList(ViewBag.Operations, "Key", "Value"), new { @class = "form-control btn-outline-secondary text-center dropdown-toggle" })
                    @*@Html.ValidationMessageFor(model => model.Operation, "", new { @class = "text-danger" })*@
                </div>
                @*@Html.LabelFor(model => model.Operation, htmlAttributes: new { @class = "control-label col-lg-1" })*@
                <div class="col-lg-3">
                    @Html.EditorFor(model => model.Input02, new { @class = "form-control btn-lg btn-outline-secondary text-center" })
                    @Html.ValidationMessageFor(model => model.Input02, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-3">
                    <input type="submit" id="btnCalulate" value="Calculate" class="btn btn-primary btn-default" />
                </div>
            </div>
            <div class="row align-items-start">
                <div class="col-lg-12">
                    &nbsp;
                </div>
            </div>
            <div class="row justify-content-start">
                <div class="col-lg-12 d-grid form-control btn-lg btn-dark text-center">
                    @Html.DisplayFor(model => model.Result) &nbsp;
                </div>
            </div>
        </div>
    </div>
    @*<div class="col d-grid">
            <asp:Button ID="btnCalulate1" runat="server" Text="Calculate" CssClass="btn btn-primary" OnClick="btnCalulate_Click" />
        </div>*@
}
<br />

@if (Model != null)
{
    <p style="background-color:yellow"> פעולות אחרונות @ViewBag.HistortDepth</p>
    <table class="table table-striped w-auto" style="display:block">
        <thead class="thead-dark">
            <tr>
                <th>
                    @*@Html.LabelFor(model => model.History.Id, htmlAttributes: new { @class = "control-label col-lg-1" })*@
                    Id
                </th>
                <th>
                    Operation
                </th>
                <th>
                    Input1
                </th>
                <th>
                    Input2
                </th>
                <th>
                    Result
                </th>
                <th>
                    Timestamp
                </th>
            </tr>
        </thead>
        <tbody>
            @*@model IEnumerable<GayaHistory>*@
            @foreach (var item in Model.History)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                    <td>@Html.DisplayFor(modelItem => item.Operation)</td>
                    <td>@Html.DisplayFor(modelItem => item.Input1)</td>
                    <td>@Html.DisplayFor(modelItem => item.Input2)</td>
                    @*<td>@Html.DisplayFor(modelItem => item.Input3)</td>
                    <td>@Html.DisplayFor(modelItem => item.Query)</td>*@
                    <td>@Html.DisplayFor(modelItem => item.Result)</td>
                    <td>@Html.DisplayFor(modelItem => item.Timestamp)</td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <div>
        <p style="background-color:lightgreen">כמות פעולות מתחילת החודש הנוכחי : <span style="font-weight: bolder;">@Model.OperationsFromBeginingOfCurrentMonth</span></p>
    </div>
    <br />
    <div>
        <p style="background-color:lightblue">ממוצעים (מתחילת החודש הנוכחי): @ViewBag.Operation</p>
        <table class="table table-striped w-auto" style="display:block">
            <thead class="thead-dark">
                <tr>
                    <th>
                        Minimum
                    </th>
                    <th>
                        Maximum
                    </th>
                    <th>
                        Avarage
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.DisplayFor(model => model.MinResultByOperation)</td>
                    <td>@Html.DisplayFor(model => model.MaxResultByOperation)</td>
                    <td>@Html.DisplayFor(model => model.AvgResultByOperation)</td>
                </tr>
            </tbody>
        </table>
    </div>
}


